name: Try to upload

on:
  push:
    branches:
      - master
  pull_request: {}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      name: Cache node modules of yarn
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: ACTIONS_ALLOW_UNSECURE_COMMANDS
      id: ACTIONS_ALLOW_UNSECURE_COMMANDS
      run: echo 'ACTIONS_ALLOW_UNSECURE_COMMANDS=true' >> $GITHUB_ENV

    - name: add cr
      run: |
        mkdir -p $GITHUB_WORKSPACE/bin
        wget -O $GITHUB_WORKSPACE/bin/cr http://repo.calcit-lang.org/binaries/linux/cr
        chmod +x $GITHUB_WORKSPACE/bin/cr
        echo "::add-path::$GITHUB_WORKSPACE/bin"

    - name: "prepare modules"
      run: >
        mkdir -p ~/.config/calcit/modules/ && cd ~/.config/calcit/modules/
        && git clone https://github.com/calcit-lang/lilac.git
        && git clone https://github.com/calcit-lang/memof.git --branch 0.0.8
        && git clone https://github.com/calcit-lang/recollect.git
        && git clone https://github.com/calcit-lang/bisection-key.git
        && git clone https://github.com/Respo/respo.calcit.git
        && git clone https://github.com/Respo/respo-ui.calcit.git
        && git clone https://github.com/Respo/respo-message.calcit.git
        && git clone https://github.com/Respo/respo-markdown.calcit.git
        && git clone https://github.com/Cumulo/cumulo-util.calcit.git
        && git clone https://github.com/mvc-works/ws-edn.calcit.git --branch 0.0.4
        && git clone https://github.com/Respo/respo-feather.calcit.git
        && git clone https://github.com/Respo/alerts.calcit.git

    - run: yarn && yarn compile-server && yarn compile-page && yarn release-page && prod=true yarn release-server

    - run: mkdir -p dist-server && mv js-out/bundle.js dist-server && cp package.json dist-server/
      name: Copy server scripts

    - name: Upload web assets
      id: deploy
      uses: Pendect/action-rsyncer@v1.1.0
      env:
        DEPLOY_KEY: ${{secrets.rsync_private_key}}
      with:
        flags: '-avzr --progress'
        options: ''
        ssh_options: ''
        src: 'dist/*'
        dest: 'rsync-user@tiye.me:/web-assets/repo/${{ github.repository }}'

    - name: Display status from deploy
      run: echo "${{ steps.deploy.outputs.status }}"
